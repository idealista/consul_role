---
- name: Consul | Add acl configuration master
  ansible.builtin.template:
    src: consul.master.j2
    dest: "{{ consul_configdir }}/master.json"
    owner: "{{ consul_user }}"
    group: "{{ consul_group }}"
    mode: 0640
  notify: Restart consul
  no_log: true
  when: consul_server

- name: Consul | Add acl configuration client
  ansible.builtin.template:
    src: consul.client.j2
    dest: "{{ consul_configdir }}/client.json"
    owner: "{{ consul_user }}"
    group: "{{ consul_group }}"
    mode: 0640
  notify: Restart consul
  no_log: true
  when: consul_agent

- name: Consul | ACLs system needs to be enabled prior to apply them
  ansible.builtin.meta: flush_handlers
  when: consul_acl  # This is to avoid triggering handlers unnecessarily

- name: Consul | Install consul_acl prerequisites
  ansible.builtin.apt:
    name: "{{ consul_acl_required_libs }}"

- name: Consul | Install consul_acl Python prerequisites
  ansible.builtin.pip:
    name: "{{ consul_acl_python_required_packages }}"
    virtualenv: "{{ consul_python_virtualenv_path if consul_python_virtualenv else omit }}"

- name: Consul | Wait for Consul to start up
  ansible.builtin.wait_for:
    port: "{{ consul_http_port }}"
    timeout: 60

- name: Consul | Create ACL
  ansible.builtin.consul_acl:
    name: "{{ item.key }}"
    token_type: "{{ item.value.token_type }}"
    token: "{{ item.value.token }}"
    rules: "{{ item.value.rules }}"
    mgmt_token: "{{ consul_acl_master_token }}"
    host: "{{ consul_server_nodes | first }}"
  notify: Restart consul
  with_dict: "{{ consul_acl_configuration_list }}"
  no_log: true
  vars:
    ansible_python_interpreter: "{{ consul_python_virtualenv_path + '/bin/python' if consul_python_virtualenv else consul_python_bin }}"
